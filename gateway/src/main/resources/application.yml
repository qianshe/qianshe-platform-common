server:
  port: 9000

spring:
  main:
    web-application-type: reactive
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      # 路由配置：定义请求如何转发到各个微服务
      routes:
        # 认证服务路由
        - id: auth-service
          uri: http://localhost:9001
#          uri: lb://user-auth
          predicates:
            - Path=/auth/**,/api/captcha/**,/api/auth/**
          filters:
            - name: RewritePath
              args:
                regexp: "/api/auth/(?<segment>.*)"
                replacement: "/auth/${segment}"
            - name: RequestRateLimiter
              args:
                rate-limiter: "#{@authRedisRateLimiter}"
                key-resolver: "#{@ipKeyResolver}"
        
        # 业务核心服务路由
        - id: fantasy-core
          uri: http://localhost:9002
          predicates:
            - Path=/api/**
          filters:
            - name: RequestRateLimiter
              args:
                rate-limiter: "#{@defaultRedisRateLimiter}"
                key-resolver: "#{@ipKeyResolver}"

        # 星空创意资源对接平台路由
        - id: stellar-bridge
          uri: http://localhost:8080
          predicates:
            - Path=/api/v1/resource/**,/api/v1/demand/**,/api/v1/matching/**,/api/v1/notification/**,/api/v1/operation/**
          filters:
            - name: RequestRateLimiter
              args:
                rate-limiter: "#{@stellarRedisRateLimiter}"
                key-resolver: "#{@ipKeyResolver}"
      httpclient:
        connect-timeout: 5000
        response-timeout: 10000
      # 默认过滤器：应用于所有路由
      default-filters:
        - name: RequestRateLimiter
          args:
            rate-limiter: "#{@defaultRedisRateLimiter}"
            key-resolver: "#{@ipKeyResolver}"
  data:
    redis:
      host: ${SPRING_REDIS_HOST:127.0.0.1}
      port: ${SPRING_REDIS_PORT:6379}
      password: qianshe_password
      database: 0
      timeout: 10s
      lettuce:
        pool:
          min-idle: 0
          max-idle: 8
          max-active: 8
          max-wait: -1ms

# 日志配置
logging:
  level:
    root: INFO
    com.qianshe.gateway: INFO
    org.springframework.cloud.gateway: INFO
    org.springframework.cloud.gateway.handler.RoutePredicateHandlerMapping: INFO
    org.springframework.cloud.gateway.filter: INFO
    org.springframework.web: INFO
    reactor.netty: INFO
    cn.dev33.satoken: DEBUG

# Sa-Token配置
# 网关负责统一鉴权，微服务只需读取会话信息
# 在网关实现多账号体系，对下游服务透明
sa-token:
  # 通用配置
  token-name: Authorization      # token名称
  timeout: 2592000              # token有效期（秒）：30天
  active-timeout: 1800          # 临时有效期（秒）：30分钟
  is-concurrent: true           # 是否允许同一账号多地同时登录
  is-share: false               # 多人登录同一账号时是否共享token
  token-style: uuid            # token风格
  token-prefix: ""              # 不使用token前缀
  is-log: true                 # 输出操作日志
  is-read-cookie: false         # 不从cookie中读取token
  is-read-head: true           # 从请求头读取token
  is-print: false              # 不打印版本字符画
  # 多账号体系配置
  token-name-user: user_token   # 普通用户token名称
  token-name-vip: vip_token     # VIP用户token名称
  token-name-admin: admin_token # 管理员token名称
  # 异常处理配置
  error: 
    code: 401                   # 未登录时返回的错误码
    message: "未登录或token已过期"  # 未登录时返回的错误信息
  # Redis配置
  alone-redis:
    # 使用与spring.data.redis相同的配置
    database: ${spring.data.redis.database}
    host: ${spring.data.redis.host}
    port: ${spring.data.redis.port}
    password: ${spring.data.redis.password}
    timeout: ${spring.data.redis.timeout}
    lettuce:
      pool:
        min-idle: ${spring.data.redis.lettuce.pool.min-idle}
        max-idle: ${spring.data.redis.lettuce.pool.max-idle}
        max-active: ${spring.data.redis.lettuce.pool.max-active}
        max-wait: ${spring.data.redis.lettuce.pool.max-wait}

# 白名单配置：不需要鉴权的路径
gateway:
  security:
    white-list:
      - /auth
      - /api/captcha
      - /doc.html
      - /swagger-resources
      - /swagger-ui
      - /v3/api-docs
      - /webjars
      - /favicon.ico
      - /error
      - /actuator
      - /api/creative-seeds/page
      - /api/comment
      - /api/branches/tree
      - /api/v1/resource/health
      - /api/v1/demand/health

# IP黑名单配置
blacklist:
  ip: ${BLACKLIST_IP:}  # 逗号分隔的IP列表，例如: 192.168.1.100,10.0.0.1
  enabled: true

# 自定义限流配置
rate-limiter:
  enabled: true
  default-capacity: 10
  default-rate: 2
  default-window: 10
  rules:
    - path: "/auth/login"
      capacity: 20
      rate: 5
      window: 60
    - path: "/auth/register"
      capacity: 20
      rate: 3
      window: 60
    - path: "/api/comment"
      capacity: 50
      rate: 10
      window: 30
    - path: "/api/like"
      capacity: 100
      rate: 20
      window: 30
    - path: "/api/captcha"
      capacity: 10
      rate: 5
      window: 20
    # stellar-bridge 限流规则
    - path: "/api/v1/resource"
      capacity: 30
      rate: 10
      window: 60
    - path: "/api/v1/demand"
      capacity: 30
      rate: 10
      window: 60
    - path: "/api/v1/matching"
      capacity: 20
      rate: 5
      window: 60
    - path: "/api/v1/notification"
      capacity: 50
      rate: 15
      window: 30
    - path: "/api/v1/operation"
      capacity: 10
      rate: 3
      window: 60
